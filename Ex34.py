#!/usr/bin/python3
# -*- coding: utf-8 -*-

#
# Файлы CSV: чтение и запись
#

# Одним из распространенных файловых форматов, которые хранят в
# удобном виде информацию, является формат csv. Каждая строка в
# файле csv представляет отдельную запись или строку, которая
# состоит из отдельных столбцов, разделенных запятыми.
# Собственно поэтому формат и называется Comma Separated Values.
# Но хотя формат csv - это формат текстовых файлов, Python для
# упрощения работы с ним предоставляет специальный встроенный
# модуль csv.

import csv

FILENAME = "users.csv"

users = [
    ["Tom", 28],
    ["Alice", 23],
    ["Bob", 34]
]

with open(FILENAME, "w", newline="") as file:
    writer = csv.writer(file)
    writer.writerows(users)

# В файл записывается двухмерный список - фактически таблица, где
# каждая строка представляет одного пользователя. А каждый
# пользователь содержит два поля - имя и возраст. То есть фактически
#  таблица из трех строк и двух столбцов.

# При открытии файла на запись в качестве третьего параметра
# указывается значение newline="" - пустая строка позволяет корректно
# считывать строки из файла вне зависимости от операционной системы.

# Для записи нам надо получить объект writer, который возвращается
# функцией csv.writer(file). В эту функцию передается открытый файл.
# А собственно запись производится с помощью метода
# writer.writerows(users) Этот метод принимает набор строк.
# В нашем случае это двухмерный список.

# Если необходимо добавить одну запись, которая представляет собой
# одномерный список, например, ["Sam", 31], то в этом случае можно
# вызвать метод writer.writerow(user)

with open(FILENAME, "a", newline="") as file:
    user = ["Sam", 31]
    writer = csv.writer(file)
    writer.writerow(user)

# В итоге после выполнения скрипта в той же папке окажется файл
# users.csv, который будет иметь следующее содержимое:
#
#   Tom,28
#   Alice,23
#   Bob,34
#   Sam,31

# Для чтения из файла нам наоборот нужно создать объект reader:


FILENAME = "users.csv"

with open(FILENAME, "r", newline="") as file:
    reader = csv.reader(file)
    for row in reader:
        print(row[0], "\t - ", row[1])
